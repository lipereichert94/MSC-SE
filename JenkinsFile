pipeline {
    agent any
    tools {
        maven 'mvn 3.9.7'
    }
    stages {
        stage('Build') { 
            steps {
                sh 'ls -lah'
                 dir('demo') {
                 // sh 'mvn -B -DskipTests clean package' 
                 sh 'mvn -Dmaven.test.failure.ignore=false install' 
                             }               
                   }
                post {
                success {
                    echo 'SUCCESS' 
                        }
                unstable {
                    echo 'NO SUCCESS' 
                         }
                failure {
                     echo 'I failed :('
                        }
            }
                        }
                        stage('Integration') {
                                steps{
  junit 'test-results.xml'
}}

                }}
node{
    def WORKSPACE = "/var/jenkins_home/workspace/springboot-deploy"
    def dockerImageTag = "springboot-deploy${env.BUILD_NUMBER}"

stage('Clone Repo') {
        // for display purposes
        // Get some code from a GitHub repository
            git url: 'https://github.com/lipereichert94/MSC-SE.git',
            credentialsId: 'eb749812-6b20-4ad4-9f69-a6a23c8f5e46',
            branch: 'main'
     }

          stage('Build docker') {
                 dockerImage = docker.build("springboot-deploy:${env.BUILD_NUMBER}")
          }

          stage('Deploy docker'){
                  echo "Docker Image Tag Name: ${dockerImageTag}"
                  sh "docker stop springboot-deploy || true && docker rm springboot-deploy|| true"
                  sh "docker run --name springboot-deploy -d -p 8081:8081 springboot-deploy:${env.BUILD_NUMBER}"
          }
}

